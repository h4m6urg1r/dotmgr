#!/usr/bin/env python

"""
It hurts me writing this shit idk how long I can keep smacking my brain to complete this shit.
"""

#Swiss Army Knife

import subprocess, shlex
# import argparse
import os
import json

# parser = argparse.ArgumentParser(description='Swiss Army Knife, It\'s supposed to do shit load of stuff')

"""
    * store :- stores the input value to the Namespace object. (This is the default action.)

    * store_const :- stores a constant value when the corresponding optional arguments are specified.

    * store_true :- stores the Boolean value True when the corresponding optional argument is specified and stores a False elsewhere.

    * store_false :- stores the Boolean value False when the corresponding optional argument is specified and stores True elsewhere.

    * append :- stores a list, appending a value to the list each time the option is provided.

    * append_const :- stores a list appending a constant value to the list each time the option is provided.

    * count :- stores an int that is equal to the times the option has been provided.

    * help :- shows a help text and exits.

    * version :- shows the version of the program and exits.
"""

# parser.add_argument(
#     '-i',
#     '--install',
#     help='Install a package'
# )

# parser.add_argument(
#     '-d',
#     '--daemon',
#     help='Daemonise sak'
# )

# args = parser.parse_args()

def installPackages():
    os.system('yay -Syu --ignore=xorg-server-xephyr')

class switchConfig:
    def __init__(self):
        self.backupFolder = os.path.expanduser('~/.cache/dotBacks')
        self.createFolder(self.backupFolder)

    def log(self, ):
        pass

    def createFolder(folder):
        os.system('mkdir -p {}'.format(folder))

    def link(self,src,dest):
        print('creating {}'.format(self.backupFolder))
        move = False
        if os.path.exists(dest):
            if os.path.islink(dest):
                if str(os.readlink(dest)).startswith(repoPath): os.unlink(dest)
                else: move = True
            else: move = True
        else: move = True
        if move: os.rename(dest,os.path.join(os.path.expanduser('~/.cache/dotBak'),os.split(dest)[1]))
        os.system('ln -s {} {}'.format(src,dest))


    def i3(self,which):
        pass

    def awesome(self, which):
        pass

class daemon:
    def __init__(self):
        self.de = DE()
        self.current = ''

    def de(self, which):
        if which == 'awesome':
            self.de.awesome()
        elif which == 'xfce4':
            self.de.xfce4()
        elif which == 'i3':
            self.de.i3()
        elif which == 'i3 debug':
            self.de.i3Debug()

    def start(self, de, action):
        if de == 'awesome':
            if action == 'start':
            elif action == 'stop':
            self.current = 'awesome'
            os.system('awesome &')

        if de == 'xfce4':
            self.current = 'xfce4'
            os.system('startxfce4 &')

        if de == 'i3':
            self.current = 'i3'
            os.system('i3 &')

        if de == 'i3Debug':
            self.current = 'i3Debug'
            os.system('i3-with-shmlog &')
